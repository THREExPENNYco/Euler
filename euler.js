// Euler Problem 1
// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.

addMultiplesOf3And5 = num => {
  let primeNumbers = 0;
  for (let i = 0; i < num; i++) {
    i % 3 === 0 || i % 5 === 0 ? primeNumbers += i : null;
  }
  return primeNumbers;
};
num = 1000;
console.log(addMultiplesOf3And5(num));

// Euler Problem 2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

addEvenFiboNumbers = sumOfEvenFiboNum => {
    let fiboArray = []; 
    let fiboEvenNumbers = 0; 
    for(let i = 0; fiboEvenNumbers < sumOfEvenFiboNum; i++) { 
        if (fiboArray.length < 2) { 
            fiboArray[i] = i; 
        } else { 
            fiboArray[i] = fiboArray[i - 1] + fiboArray[i - 2];
            fiboArray[i] % 2 === 0 ? fiboEvenNumbers += fiboArray[i] : null;
        }
    }
    return fiboArray; 
};
console.log(addEvenFiboNumbers(4000000));
